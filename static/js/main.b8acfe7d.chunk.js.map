{"version":3,"sources":["logo.svg","App_components/Weather.jsx","App_components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["weather","props","className","style","margin","city","weatherIcon","temp_celsius","minmaxTemp","temp_min","temp_max","description","min","max","form","error","role","onSubmit","loadWeather","type","name","autoComplete","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","api_call","json","response","console","log","setState","sys","celsius","calCelsius","main","temp","get_WeatherIcon","id","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","icons","rangeId","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8acfe7d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nexport default function weather(props) {\r\n    let styling = {\r\n        margin:\"95px\"\r\n    }\r\n    return (\r\n        <div className=\"container text-light\">\r\n            <div className=\"cards pt-6 mt-6\" style={styling}>\r\n                <h1>{props.city}</h1>\r\n                <h5 className=\"py-4\">\r\n                    <i className={`wi ${props.weatherIcon} display-1`} / >\r\n                </h5>\r\n                {props.temp_celsius ? (<h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>):null}\r\n                {/* Show max and min Temp */}\r\n                {minmaxTemp(props.temp_min,props.temp_max)}\r\n\r\n                <h4 className=\"py-3\">{props.description}</h4>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nfunction minmaxTemp(min,max){\r\n    if(min && max){\r\n    return(\r\n        <h3>\r\n            <span className=\"px-4\">{min}&deg;</span>\r\n            <span className=\"px-4\">{max}&deg;</span>\r\n        </h3>\r\n    )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport '../App_components/form.css'\r\n\r\nexport default function form(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div>{props.error ? error(): null}</div>\r\n            <form onSubmit = {props.loadWeather}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 offset-md-2\">\r\n                        <input type=\"text\" className=\"form-control\" name=\"city\" autoComplete=\"off\" placeholder=\"Enter your City\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 \">\r\n                        <input type=\"text\" className=\"form-control\" name=\"country\" autoComplete=\"off\" placeholder=\"Enter your Country\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-md-0  text-md-left\">\r\n                        <button className=\"btn btn-warning\">Get Weather</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction error(){\r\n    return(\r\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n            Please Enter City and Country\r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'weather-icons/css/weather-icons.css'\nimport Weather  from './App_components/Weather';\nimport Form from './App_components/Form';\nimport React from 'react';\n\n// api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\nconst API_Key = \"fe6b453a1a1983246f8463796f8ce70f\"\n\nclass App extends React.Component{\n  constructor(){\n    \n    super()\n    this.state = {\n      city:undefined,\n      country:undefined,\n      icon:undefined,\n      main:undefined,\n      celsius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    }\n    // this.getWeather()\n\n    this.weatherIcon = {\n      Thunderstorm:\"wi-thunderstorm\",\n      Drizzle:\"wi-sleet\", \n      Rain:\"wi-storm-showers\",\n      Snow:\"wi-snow\",\n      Atmosphere:\"wi-fog\",\n      Clear:\"wi-day-sunny\",\n      Clouds:\"wi-day-fog\",\n    }\n  }\n\n  calCelsius(temp){\n    let cell = Math.floor(temp-273.15)\n    return cell\n  }\n\n  get_WeatherIcon(icons,rangeId){\n    switch(true){\n      case rangeId>=200 && rangeId<=232:\n        this.setState({icon:this.weatherIcon.Thunderstorm})\n        break\n        \n      case rangeId>=300 && rangeId<=321:\n        this.setState({icon:this.weatherIcon.Drizzle})\n        break\n\n      case rangeId>=500 && rangeId<=531:\n        this.setState({icon:this.weatherIcon.Rain})\n        break\n      \n        case rangeId>=600 && rangeId<=622:\n        this.setState({icon:this.weatherIcon.Snow})\n        break\n      \n        case rangeId>=701 && rangeId<=781:\n        this.setState({icon:this.weatherIcon.Atmosphere})\n        break\n      \n        case rangeId>=801 && rangeId<=804:\n        this.setState({icon:this.weatherIcon.Clouds})\n        break\n        \n        default:\n        this.setState({icon:this.weatherIcon.Clouds})\n      }\n  }\n\n  getWeather = async(e)=>{\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value\n    const country = e.target.elements.country.value\n\n    if(city && country){\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_Key}`)\n\n    const response = await api_call.json()\n    console.log(response)\n\n    this.setState({\n      city:`${response.name},${response.sys.country}`,\n      celsius:this.calCelsius(response.main.temp),\n      temp_max:this.calCelsius(response.main.temp_max),\n      temp_min:this.calCelsius(response.main.temp_min),\n      description:response.weather[0].description,\n      error:false\n    })\n\n    this.get_WeatherIcon(this.weatherIcon , response.weather[0].id)\n \n    }\n    else{\n      this.setState({error:true})\n    }\n     }\n\n  render(){\n    return(\n      <div className=\"App\">\n      <Form loadWeather = {this.getWeather} error = {this.state.error} />\n      <Weather \n      city = {this.state.city} \n      country = {this.state.country} \n      temp_celsius = {this.state.celsius} \n      temp_max = {this.state.temp_max}\n      temp_min = {this.state.temp_min}\n      description = {this.state.description}\n      weatherIcon = {this.state.icon}\n      />\n    </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}